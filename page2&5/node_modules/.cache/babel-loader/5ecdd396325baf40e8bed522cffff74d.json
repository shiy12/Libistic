{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\80929\\\\Desktop\\\\a4related\\\\startercode\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, NavLink } from 'react-router-dom'; // Install the socket io client using:\n//    npm install socket.io\n//\n// Then import socket io and create a socket:\n//\n\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001'); //\n// See: https://socket.io/get-started/chat\n//      https://www.npmjs.com/package/socket.io-client\n\nclass Page1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      low: false\n    };\n  }\n\n  filterLow() {\n    this.setState({\n      low: !this.state.low\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"low\",\n      checked: this.state.low,\n      onChange: this.filterLow.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"low\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Low\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, this.state.posts.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.props.posts.map(({\n      name,\n      image,\n      content,\n      problem,\n      priority,\n      id\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"{name}\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 52\n      }\n    }), name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }\n    }), problem, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }), priority, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }\n    }), content, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 50\n      }\n    })))));\n  }\n\n}\n\nclass Page2 extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, \"Page2\");\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // An array of social media posts messages, and we'll increment nextID\n    // to maintain a unique ID for each post in our array\n\n    this.state = {\n      posts: [],\n      nextID: 0\n    }; // We can setup the event handlers for the messages in the constructor...\n\n    socket.on('connect', function () {\n      console.log(\"Connect....\"); // When we receive a social media message, call setState and insert \n      // it into the array of posts\n\n      socket.on('post', function (data) {\n        // Can uncomment this to see the raw data coming in...\n        // console.log(\"post: \" + JSON.stringify(data));\n        // increment the next unique ID, and put post data into the list of \n        // posts... use the '...' syntax to make this insertion easier:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax \n        this.setState({\n          posts: [...this.state.posts, {\n            name: data.name,\n            image: data.image,\n            content: data.content,\n            problem: data.problem,\n            priority: data.priority,\n            id: this.state.nextID\n          }],\n          nextID: this.state.nextID + 1\n        });\n      }.bind(this)); // ^^ Like other event handlers, we bind the callback function to the \n      // component so we can use setState        \n    }.bind(this)); // ^^ ... And same with the callback function for when a connection is made\n  } // Output all the posts into a table\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/page1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Page1\"), /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/page2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Page2\"), /*#__PURE__*/React.createElement(Route, {\n      path: \"/page1\",\n      render: props => /*#__PURE__*/React.createElement(Page1, Object.assign({}, props, {\n        posts: this.state.posts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 53\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/page2\",\n      component: Page2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/80929/Desktop/a4related/startercode/frontend/src/App.js"],"names":["React","HashRouter","Router","Route","NavLink","io","socket","Page1","Component","constructor","props","state","low","filterLow","setState","render","bind","posts","name","map","image","content","problem","priority","id","Page2","App","nextID","on","console","log","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SACEC,UAAU,IAAIC,MADhB,EAEEC,KAFF,EAGEC,OAHF,QAIO,kBAJP,C,CAMA;AACA;AACA;AACA;AACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB,C,CACA;AACA;AACA;;AAIA,MAAME,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAX;AACD;;AAEDC,EAAAA,SAAS,GAAE;AAAC,SAAKC,QAAL,CAAc;AAACF,MAAAA,GAAG,EAAC,CAAC,KAAKD,KAAL,CAAWC;AAAjB,KAAd;AAAsC;;AAElDG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAG,UAAd;AAAyB,MAAA,EAAE,EAAC,KAA5B;AAAkC,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,GAAtD;AACI,MAAA,QAAQ,EAAE,KAAKC,SAAL,CAAeG,IAAf,CAAoB,IAApB,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAO,MAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,IAArB,CALF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWO,KAAX,CAAiBE,GAAjB,CACC,CAAC;AAACD,MAAAA,IAAD;AAAME,MAAAA,KAAN;AAAYC,MAAAA,OAAZ;AAAoBC,MAAAA,OAApB;AAA4BC,MAAAA,QAA5B;AAAqCC,MAAAA;AAArC,KAAD,kBACA;AACE,MAAA,GAAG,EAAEA,EADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,GAAG,EAAEJ,KAAV;AAAiB,MAAA,GAAG,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,oBAEqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFrC,EAGKF,IAHL,oBAGW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX,EAIKI,OAJL,oBAIc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJd,EAKKC,QALL,oBAKe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALf,EAMKF,OANL,oBAMc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd,oBAMqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANrB,oBAM4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAN5B,oBAMmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANnC,CAFD,CADL,CAVF,CADF;AAyBE;;AAnC6B;;AAsCnC,MAAMI,KAAN,SAAoBzB,KAAK,CAACQ,SAA1B,CAAmC;AAEjCO,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAJgC;;AAenC,MAAMW,GAAN,SAAkB1B,KAAK,CAACQ,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;AACA;;AACA,SAAKC,KAAL,GAAa;AAACM,MAAAA,KAAK,EAAE,EAAR;AAAWU,MAAAA,MAAM,EAAE;AAAnB,KAAb,CALiB,CAOjB;;AACArB,IAAAA,MAAM,CAACsB,EAAP,CAAU,SAAV,EAAqB,YAAU;AAE7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAF6B,CAI7B;AACA;;AACAxB,MAAAA,MAAM,CAACsB,EAAP,CAAU,MAAV,EAEE,UAASG,IAAT,EAAe;AAEb;AACA;AAEA;AACA;AACA;AACA,aAAKjB,QAAL,CACE;AAACG,UAAAA,KAAK,EAAE,CAAC,GAAG,KAAKN,KAAL,CAAWM,KAAf,EACC;AAACC,YAAAA,IAAI,EAAEa,IAAI,CAACb,IAAZ;AACCE,YAAAA,KAAK,EAAEW,IAAI,CAACX,KADb;AAECC,YAAAA,OAAO,EAAEU,IAAI,CAACV,OAFf;AAGCC,YAAAA,OAAO,EAAES,IAAI,CAACT,OAHf;AAICC,YAAAA,QAAQ,EAAEQ,IAAI,CAACR,QAJhB;AAKCC,YAAAA,EAAE,EAAE,KAAKb,KAAL,CAAWgB;AALhB,WADD,CAAR;AAOCA,UAAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWgB,MAAX,GAAoB;AAP7B,SADF;AASD,OAjBD,CAiBEX,IAjBF,CAiBO,IAjBP,CAFF,EAN6B,CA0B3B;AACA;AAEH,KA7BoB,CA6BnBA,IA7BmB,CA6Bd,IA7Bc,CAArB,EARiB,CAsCjB;AAED,GA1C+B,CA4ChC;;;AACAD,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAKL,KAAD,iBAAW,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWM,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEQ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAaD;;AA3D+B;;AAkElC,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Route,\n  NavLink\n} from 'react-router-dom';\n\n// Install the socket io client using:\n//    npm install socket.io\n//\n// Then import socket io and create a socket:\n//\nimport io from 'socket.io-client';\nconst socket = io('http://localhost:3001');\n//\n// See: https://socket.io/get-started/chat\n//      https://www.npmjs.com/package/socket.io-client\n\n\n\nclass Page1 extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state={low: false};\n  }\n\n  filterLow(){this.setState({low:!this.state.low});}\n\n  render(){\n    return(\n      <div>\n        <input type = \"checkbox\" id=\"low\" checked={this.state.low}\n            onChange={this.filterLow.bind(this)}/>\n        <label for=\"low\">Low</label>\n\n        <p>{this.state.posts.name}</p>\n\n\n\n\n        <div>\n            {this.props.posts.map( \n              ({name,image,content,problem,priority,id}) => \n              <div \n                key={id}> \n                  <img src={image} alt=\"{name}\" /> <br />\n                  {name} <br />\n                  {problem} <br />\n                  {priority} <br />\n                  {content} <br /> <br /> <br /> <br />\n              </div> \n            )}\n        </div>\n      </div>\n    )}\n}\n\nclass Page2 extends React.Component{\n\n  render(){\n    return <h1>Page2</h1>\n  }\n}\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    // An array of social media posts messages, and we'll increment nextID\n    // to maintain a unique ID for each post in our array\n    this.state = {posts: [],nextID: 0};\n\n    // We can setup the event handlers for the messages in the constructor...\n    socket.on('connect', function(){\n\n      console.log(\"Connect....\");\n\n      // When we receive a social media message, call setState and insert \n      // it into the array of posts\n      socket.on('post', \n\n        function(data) {\n\n          // Can uncomment this to see the raw data coming in...\n          // console.log(\"post: \" + JSON.stringify(data));\n\n          // increment the next unique ID, and put post data into the list of \n          // posts... use the '...' syntax to make this insertion easier:\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax \n          this.setState( \n            {posts: [...this.state.posts,\n                     {name: data.name, \n                      image: data.image, \n                      content: data.content, \n                      problem: data.problem,\n                      priority: data.priority,\n                      id: this.state.nextID}]\n            ,nextID: this.state.nextID + 1} );\n        }.bind(this));\n        // ^^ Like other event handlers, we bind the callback function to the \n        // component so we can use setState        \n\n    }.bind(this));\n    // ^^ ... And same with the callback function for when a connection is made\n\n  }\n  \n  // Output all the posts into a table\n  render() {\n    return (\n      <div>\n        <Router>\n          <NavLink to=\"/page1\">Page1</NavLink>\n          <NavLink to=\"/page2\">Page2</NavLink>\n\n          <Route path=\"/page1\" render = {(props) => <Page1 {...props} posts={this.state.posts} />}/>\n          <Route path=\"/page2\" component={Page2}/>\n        \n        </Router>      \n\n      </div>\n    );\n  }\n}\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}